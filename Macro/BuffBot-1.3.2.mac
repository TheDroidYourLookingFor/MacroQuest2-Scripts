|------------------------------------------------------------|
|          BuffBot.mac
|
|      Last Modified by: TheDroidUrLookingFor
|
|		Version:	1.3.2
|
|------------------------------------------------------------|
	#turbo
|------------------------------------------------------------|
|          Includes
|------------------------------------------------------------|
|#include spell_routines.inc
|#define CASTMODE       "cast"
	#include MQ2Cast_Spell_Routines.inc
	#define CASTMODE       "MQ2Cast"
|------------------------------------------------------------|
|          Defines
|------------------------------------------------------------|
	#define CHATMETHOD          "/if (${ShowDebug}) /bc"
	#define CHATMETHOD1       "/echo"
	#define CHATMETHOD2       "/t"
	#define ACCOUNTCHAT       "/say"
|	#define ACCOUNTCHAT       "/t"	
	#define PORTCHAT       "/say"
|	#define PORTCHAT       "/t"
	#define ADVERTISECHAT       "/say"
|	#define ADVERTISECHAT       "/t"
|------------------------------------------------------------|
|          Events
|------------------------------------------------------------|
	#Event Hail "#1# says, 'Hail, |${Me.Name}|'"
	#Event Hail "#1# says, in #2#, 'Hail, |${Me.Name}|'"
|------------------------------------------------------------|
|          Mage Events
|------------------------------------------------------------|
	#Event Toys "#1# says, in #*#, 'toys'"
	#Event Toys "#1# says, 'toys'"
	#Event ToysCustom "#1# says, in #*#, 'toys #2#'"
	#Event ToysCustom "#1# says, 'toys #2#'"
	#Event Other "#1# says, in #*#, 'other'"
	#Event Other "#1# says, 'other'"
	#Event Invis "#1# says, in #*#, 'invis'"
	#Event Invis "#1# says, 'invis'"
	#Event ModRod "#1# says, in #*#, 'rod'"
	#Event ModRod "#1# says, 'rod'"
	#Event DmgRod "#1# says, in #*#, 'drod'"
	#Event DmgRod "#1# says, 'drod'"
	#Event Arrows "#1# says, in #*#, 'arrows'"
	#Event Arrows "#1# says, 'arrows'"
|------------------------------------------------------------|
|          Cleric Events
|------------------------------------------------------------|
	#Event RezMe "#1# says, in #*#, 'rez'"
	#Event RezMe "#1# says, 'rez'"
|------------------------------------------------------------|
|          Necromancer Events
|------------------------------------------------------------|
	#Event SummonMe "#1# says, in #*#, 'summon'"
	#Event SummonMe "#1# says, 'summon'"
|------------------------------------------------------------|
|          Port Events
|------------------------------------------------------------|
	#Event Ports "#1# says, 'ports'"
	#Event Ports "#1# says, in #*#, 'ports'"
	#Event BlightfireMoors "#1# says, in #*#, 'moors'"
	#Event BlightfireMoors "#1# says, 'moors'"
	#Event Nexus "#1# says, in #*#, 'nexus'"
	#Event Nexus "#1# says, 'nexus'"
	#Event Toxxulia "#1# says, in #*#, 'tox'"
	#Event Toxxulia "#1# says, 'tox'"
	#Event ButcherBlock "#1# says, in #*#, 'butcher'"
	#Event ButcherBlock "#1# says, 'butcher'"
	#Event Iceclad "#1# says, in #*#, 'iceclad'"
	#Event Iceclad "#1# says, 'iceclad'"
	#Event Karana "#1# says, in #*#, 'karana'"
	#Event Karana "#1# says, 'karana'"
	#Event Commonlands "#1# says, in #*#, 'cl'"
	#Event Commonlands "#1# says, 'cl'"
	#Event SurefallGlade "#1# says, in #*#, 'sfg'"
	#Event SurefallGlade "#1# says, 'sfg'"
	#Event StoneBrunt "#1# says, in #*#, 'stoneBrunt'"
	#Event StoneBrunt "#1# says, 'stoneBrunt'"
	#Event Grimling "#1# says, in #*#, 'grimling'"
	#Event Grimling "#1# says, 'grimling'"
	#Event Feerrott "#1# says, in #*#, 'feerrott'"
	#Event Feerrott "#1# says, 'feerrott'"
	#Event Steamfont "#1# says, in #*#, 'steamfont'"
	#Event Steamfont "#1# says, 'steamfont'"
	#Event Combines "#1# says, in #*#, 'combines'"
	#Event Combines "#1# says, 'combines'"
	#Event Ro "#1# says, in #*#, 'ro'"
	#Event Ro "#1# says, 'ro'"
	#Event Twilight "#1# says, in #*#, 'twilight'"
	#Event Twilight "#1# says, 'twilight'"
	#Event GreatDivide "#1# says, in #*#, 'gd'"
	#Event GreatDivide "#1# says, 'gd'"
	#Event WakeningLands "#1# says, in #*#, 'wl'"
	#Event WakeningLands "#1# says, 'wl'"
	#Event CobaltScar "#1# says, in #*#, 'cs'"
	#Event CobaltScar "#1# says, 'cs'"
	#Event Misty "#1# says, in #*#, 'misty'"
	#Event Misty "#1# says, 'misty'"
	#Event PoKnowledge "#1# says, in #*#, 'pok'"
	#Event PoKnowledge "#1# says, 'pok'"
	#Event LavaStorm "#1# says, in #*#, 'lavastorm'"
	#Event LavaStorm "#1# says, 'lavastorm'"
	#Event UnderShore "#1# says, in #*#, 'undershore'"
	#Event UnderShore "#1# says, 'undershore'"
	#Event Arcstone "#1# says, in #*#, 'arcstone'"
	#Event Arcstone "#1# says, 'arcstone'"
	#Event Natimbi "#1# says, in #*#, 'natimbi'"
	#Event Natimbi "#1# says, 'natimbi'"
	#Event Dawnshroud "#1# says, in #*#, 'dawnshroud'"
	#Event Dawnshroud "#1# says, 'dawnshroud'"
	#Event Barindu "#1# says, in #*#, 'barindu'"
	#Event Barindu "#1# says, 'barindu'"
	#Event Bloodfields "#1# says, in #*#, 'bloodfields'"
	#Event Bloodfields "#1# says, 'bloodfields'"
	#Event TheSteppes "#1# says, in #*#, 'steppes'"
	#Event TheSteppes "#1# says, 'steppes'"
	#Event BuriedSea "#1# says, in #*#, 'buriedsea'"
	#Event BuriedSea "#1# says, 'buriedsea'"
	#Event Slaughter "#1# says, in #*#, 'slaughter'"
	#Event Slaughter "#1# says, 'slaughter'"
	#Event Direwind "#1# says, in #*#, 'direwind'"
	#Event Direwind "#1# says, 'direwind'"
	#Event LopingPlains "#1# says, in #*#, 'loping'"
	#Event LopingPlains "#1# says, 'loping'"
	#Event PoTime "#1# says, in #*#, 'time'"
	#Event PoTime "#1# says, 'time'"
	#Event BrellsRest "#1# says, in #*#, 'brells'"
	#Event BrellsRest "#1# says, 'brells'"
	#Event Grounds "#1# says, in #*#, 'grounds'"
	#Event Grounds "#1# says, 'grounds'"
	#Event BeastsDomain "#1# says, in #*#, 'beasts'"
	#Event BeastsDomain "#1# says, 'beasts'"
	#Event PillarsOfAlra "#1# says, in #*#, 'pillars'"
	#Event PillarsOfAlra "#1# says, 'pillars'"
	#Event ShardsLanding "#1# says, in #*#, 'shards'"
	#Event ShardsLanding "#1# says, 'shards'"
	#Event WestKarana "#1# says, in #*#, 'wkarana'"
	#Event WestKarana "#1# says, 'wkarana'"
	#Event Lceanium "#1# says, in #*#, 'lceanium'"
	#Event Lceanium "#1# says, 'lceanium'"
	#Event TempestTemple "#1# says, in #*#, 'tempest'"
	#Event TempestTemple "#1# says, 'tempest'"
	#Event GFay "#1# says, in #*#, 'fay'"
	#Event GFay "#1# says, 'fay'"
	#Event Nek "#1# says, in #*#, 'nek'"
	#Event Nek "#1# says, 'nek'"
	#Event Cazic "#1# says, in #*#, 'cazic'"
	#Event Cazic "#1# says, 'cazic'"
	#Event Bind "#1# says, in #*#, 'bind'"
	#Event Bind "#1# says, 'bind'"
	#Event Sunderock "#1# says, in #*#, 'sunderock'"
	#Event Sunderock "#1# says, 'sunderock'"
	#Event PrimaryAnchor "#1# says, in #*#, 'primary'"
	#Event PrimaryAnchor "#1# says, 'primary'"
	#Event SecondaryAnchor "#1# says, in #*#, 'secondary'"
	#Event SecondaryAnchor "#1# says, 'secondary'"
	#Event Icefall "#1# says, in #*#, 'icefall'"
	#Event Icefall "#1# says, 'icefall'"
	#Event Katta "#1# says, in #*#, 'katta'"
	#Event Katta "#1# says, 'katta'"
	#Event Dragonscale "#1# says, in #*#, 'dragonscale'"
	#Event Dragonscale "#1# says, 'dragonscale'"
	#Event Sarith "#1# says, in #*#, 'sarith'"
	#Event Sarith "#1# says, 'sarith'"
|------------------------------------------------------------|
|          End of Events
|------------------------------------------------------------|

|------------------------------------------------------------|
|          Main Rountine
|------------------------------------------------------------|
| --------------------------------------------------------------------------------------------
| SUB: Main
| --------------------------------------------------------------------------------------------
	Sub Main
|-----------Guild--------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,General,Buff Guild Only].Length}) /call SetIni "BuffBot.Settings.ini" "General" "Buff Guild Only" "TRUE"
	/Declare BuffGuildOnly		bool outer ${Ini[BuffBot.Settings.ini,General,Buff Guild Only]}
|-----------Debug--------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,General,ShowDebug].Length}) /call SetIni "BuffBot.Settings.ini" "General" "ShowDebug" "FALSE"
	/Declare ShowDebug			bool outer ${Ini[BuffBot.Settings.ini,General,ShowDebug]}
|-----------Toy Request Cap----------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,General,Max Summon Requests].Length}) /call SetIni "BuffBot.Settings.ini" "General" "Max Summon Requests" "20"
	/Declare MaxRequests			int outer ${Ini[BuffBot.Settings.ini,General,Max Summon Requests]}
	/if (!${Ini[BuffBot.Settings.ini,General,Advertise].Length}) /call SetIni "BuffBot.Settings.ini" "General" "Advertise" "FALSE"
	/Declare Advertise				bool outer ${Ini[BuffBot.Settings.ini,General,Advertise]}
	/if (!${Ini[BuffBot.Settings.ini,General,Port Gem].Length}) /call SetIni "BuffBot.Settings.ini" "General" "Port Gem" "gem8"
	/Declare PortGem				string outer ${Ini[BuffBot.Settings.ini,General,Port Gem]}
|-----------Accounts-----------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Account,Use Account Mode].Length}) /call SetIni "BuffBot.Settings.ini" "Account" "Use Account Mode" "FALSE"
	/Declare AccountMode		bool outer ${Ini[BuffBot.Settings.ini,Account,Use Account Mode]}
	/if (!${Ini[BuffBot.Settings.ini,Account,Use Friend Mode].Length}) /call SetIni "BuffBot.Settings.ini" "Account" "Use Friend Mode" "FALSE"
	/Declare FriendMode		bool outer ${Ini[BuffBot.Settings.ini,Account,Use Friend Mode]}
	/if (!${Ini[BuffBot.Settings.ini,Account,Friends Buff Free].Length}) /call SetIni "BuffBot.Settings.ini" "Account" "Friends Buff Free" "FALSE"
	/Declare FriendFree		bool outer ${Ini[BuffBot.Settings.ini,Account,Friends Buff Free]}
	/if (!${Ini[BuffBot.Settings.ini,Account,Use Guild Mode].Length}) /call SetIni "BuffBot.Settings.ini" "Account" "Use Guild Mode" "FALSE"
	/Declare GuildMode		bool outer ${Ini[BuffBot.Settings.ini,Account,Use Guild Mode]}
	/if (!${Ini[BuffBot.Settings.ini,Account,Guild Buffs Free].Length}) /call SetIni "BuffBot.Settings.ini" "Account" "Guild Buffs Free" "TRUE"
	/Declare GuildFree		bool outer ${Ini[BuffBot.Settings.ini,Account,Guild Buffs Free]}
	/if (!${Ini[BuffBot.Settings.ini,Account,Starting Balance].Length}) /call SetIni "BuffBot.Settings.ini" "Account" "Starting Balance" "5000"
	/Declare StartBalance		int outer ${Ini[BuffBot.Settings.ini,Account,Starting Balance]}
	/if (!${Ini[BuffBot.Settings.ini,Account,Buff Cost].Length}) /call SetIni "BuffBot.Settings.ini" "Account" "Buff Cost" "100"
	/Declare BuffCost		int outer ${Ini[BuffBot.Settings.ini,Account,Buff Cost]}
	/if (!${Ini[BuffBot.Settings.ini,Account,Summon Cost].Length}) /call SetIni "BuffBot.Settings.ini" "Account" "Summon Cost" "100"
	/Declare SummonCost		int outer ${Ini[BuffBot.Settings.ini,Account,Summon Cost]}
	/if (!${Ini[BuffBot.Settings.ini,Account,Port Cost].Length}) /call SetIni "BuffBot.Settings.ini" "Account" "Port Cost" "100"
	/Declare PortCost		int outer ${Ini[BuffBot.Settings.ini,Account,Port Cost]}
|-----------EQBC---------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,EQBC,Use EQBC].Length}) /call SetIni "BuffBot.Settings.ini" "EQBC" "Use EQBC" "FALSE"
	/Declare UseEQBC			bool outer ${Ini[BuffBot.Settings.ini,EQBC,Use EQBC]}
	/if (!${Ini[BuffBot.Settings.ini,EQBC,Server].Length}) /call SetIni "BuffBot.Settings.ini" "EQBC" "Server" "192.168.1.251"
	/Declare EQBCServerAddr		string outer ${Ini[BuffBot.Settings.ini,EQBC,Server]}
	/if (!${Ini[BuffBot.Settings.ini,EQBC,Port].Length}) /call SetIni "BuffBot.Settings.ini" "EQBC" "Port" "2112"
	/Declare EQBCPort			string outer ${Ini[BuffBot.Settings.ini,EQBC,Port]}
	/if (!${Ini[BuffBot.Settings.ini,EQBC,Password].Length}) /call SetIni "BuffBot.Settings.ini" "EQBC" "Password" ""
	/Declare EQBCPassword			string outer ${Ini[BuffBot.Settings.ini,EQBC,Password]}
|-----------Guild--------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Mana,Start Med].Length}) /call SetIni "BuffBot.Settings.ini" "Mana" "Start Med" "35"
	/Declare MedAtPct			int outer ${Ini[BuffBot.Settings.ini,Mana,Start Med]}
	/if (!${Ini[BuffBot.Settings.ini,Mana,Finish Med].Length}) /call SetIni "BuffBot.Settings.ini" "Mana" "Finish Med" "60"
	/Declare DoneMeddingPct		int outer ${Ini[BuffBot.Settings.ini,Mana,Finish Med]}
|-----------Items--------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Items,Use Horse].Length}) /call SetIni "BuffBot.Settings.ini" "Items" "Use Horse" "FALSE"
	/Declare UseHorse			bool outer ${Ini[BuffBot.Settings.ini,Items,Use Horse]}
	/if (!${Ini[BuffBot.Settings.ini,Items,Horse].Length}) /call SetIni "BuffBot.Settings.ini" "Items" "Horse" "Jungle Raptor Saddle"
	/Declare HorseItem			string outer ${Ini[BuffBot.Settings.ini,Items,Horse]}
|------------------------------------------------------------|
|          Enchanter
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Enchanter,1-45 Haste].Length}) /call SetIni "BuffBot.Settings.ini" "Enchanter" "1-45 Haste" "Swift Like the Wind|gem1"
	/Declare EncLowLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Enchanter,1-45 Haste]}
	/Declare EncLowLvlBuff1Gem	string outer
	/if (${EncLowLvlBuff1.Find[|]}) {
		/varset EncLowLvlBuff1 ${EncLowLvlBuff1.Arg[1,|]}
		/varset EncLowLvlBuff1Gem ${EncLowLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Enchanter,1-41 Clarity].Length}) /call SetIni "BuffBot.Settings.ini" "Enchanter" "1-41 Clarity" "Boon of the Clear Mind|gem2"
	/Declare EncLowLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Enchanter,1-41 Clarity]}
	/Declare EncLowLvlBuff2Gem	string outer
	/if (${EncLowLvlBuff2.Find[|]}) {
		/varset EncLowLvlBuff2 ${EncLowLvlBuff2.Arg[1,|]}
		/varset EncLowLvlBuff2Gem ${EncLowLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Enchanter,42-45 Clarity].Length}) /call SetIni "BuffBot.Settings.ini" "Enchanter" "42-45 Clarity" "Gift of Pure Thought|gem2"
	/Declare EncLowLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Enchanter,42-45 Clarity]}
	/Declare EncLowLvlBuff3Gem	string outer
	/if (${EncLowLvlBuff3.Find[|]}) {
		/varset EncLowLvlBuff3 ${EncLowLvlBuff3.Arg[1,|]}
		/varset EncLowLvlBuff3Gem ${EncLowLvlBuff3.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Enchanter,46-60 Haste].Length}) /call SetIni "BuffBot.Settings.ini" "Enchanter" "46-60 Haste" "Speed of Vallon|gem1"
	/Declare EncMedLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Enchanter,46-60 Haste]}
	/Declare EncMedLvlBuff1Gem	string outer
	/if (${EncMedLvlBuff1.Find[|]}) {
		/varset EncMedLvlBuff1 ${EncMedLvlBuff1.Arg[1,|]}
		/varset EncMedLvlBuff1Gem ${EncMedLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Enchanter,46-60 Clarity].Length}) /call SetIni "BuffBot.Settings.ini" "Enchanter" "46-60 Clarity" "Clairvoyance|gem2"
	/Declare EncMedLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Enchanter,46-60 Clarity]}
	/Declare EncMedLvlBuff2Gem	string outer
	/if (${EncMedLvlBuff2.Find[|]}) {
		/varset EncMedLvlBuff2 ${EncMedLvlBuff2.Arg[1,|]}
		/varset EncMedLvlBuff2Gem ${EncMedLvlBuff2.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Enchanter,61+ Haste].Length}) /call SetIni "BuffBot.Settings.ini" "Enchanter" "61+ Haste" "Speed of Prokev|gem1"
	/Declare EncHighLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Enchanter,61+ Haste]}
	/Declare EncHighLvlBuff1Gem	string outer
	/if (${EncHighLvlBuff1.Find[|]}) {
		/varset EncHighLvlBuff1 ${EncHighLvlBuff1.Arg[1,|]}
		/varset EncHighLvlBuff1Gem ${EncHighLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Enchanter,61+ Clarity].Length}) /call SetIni "BuffBot.Settings.ini" "Enchanter" "61+ Clarity" "Foresight|gem2"
	/Declare EncHighLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Enchanter,61+ Clarity]}
	/Declare EncHighLvlBuff2Gem	string outer
	/if (${EncHighLvlBuff2.Find[|]}) {
		/varset EncHighLvlBuff2 ${EncHighLvlBuff2.Arg[1,|]}
		/varset EncHighLvlBuff2Gem ${EncHighLvlBuff2.Arg[2,|]}
	}
|------------------------------------------------------------|
|          Enchanter
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Mage
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Mage,1-45 DS].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "1-45 DS" "Shield of Lava|gem1"
	/Declare MageLowLvlBuff	string outer ${Ini[BuffBot.Settings.ini,Mage,1-45 DS]}
	/Declare MageLowLvlBuffGem	string outer
	/if (${MageLowLvlBuff.Find[|]}) {
		/varset MageLowLvlBuff ${MageLowLvlBuff.Arg[1,|]}
		/varset MageLowLvlBuffGem ${MageLowLvlBuff.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Mage,46-60 DS].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "46-60 DS" "Flameshield of Ro|gem1"
	/Declare MageMedLvlBuff	string outer ${Ini[BuffBot.Settings.ini,Mage,46-60 DS]}
	/Declare MageMedLvlBuffGem	string outer
	/if (${MageMedLvlBuff.Find[|]}) {
		/varset MageMedLvlBuff ${MageMedLvlBuff.Arg[1,|]}
		/varset MageMedLvlBuffGem ${MageMedLvlBuff.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Mage,61+ DS].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "61+ DS" "Flameweave Coat|gem1"
	/Declare MageHighLvlBuff	string outer ${Ini[BuffBot.Settings.ini,Mage,61+ DS]}
	/Declare MageHighLvlBuffGem	string outer
	/if (${MageHighLvlBuff.Find[|]}) {
		/varset MageHighLvlBuff ${MageHighLvlBuff.Arg[1,|]}
		/varset MageHighLvlBuffGem ${MageHighLvlBuff.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Mage,Visor].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Visor" "Grant Visor of Gobeker|gem1"
	/Declare MageSummon1		string outer ${Ini[BuffBot.Settings.ini,Mage,Visor]}
	/Declare MageSummon1Gem		string outer
	/if (${MageSummon1.Find[|]}) {
		/varset MageSummon1 ${MageSummon1.Arg[1,|]}
		/varset MageSummon1Gem ${MageSummon1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Weapons].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Weapons" "Grant Thassis' Armaments|gem2"
	/Declare MageSummon2		string outer ${Ini[BuffBot.Settings.ini,Mage,Weapons]}
	/Declare MageSummon2Gem		string outer
	/if (${MageSummon2.Find[|]}) {
		/varset MageSummon2 ${MageSummon2.Arg[1,|]}
		/varset MageSummon2Gem ${MageSummon2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Armor].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Armor" "Grant Thassis' Plate|gem3"
	/Declare MageSummon3		string outer ${Ini[BuffBot.Settings.ini,Mage,Armor]}
	/Declare MageSummon3Gem		string outer 
	/if (${MageSummon3.Find[|]}) {
		/varset MageSummon3 ${MageSummon3.Arg[1,|]}
		/varset MageSummon3Gem ${MageSummon3.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Heirlooms].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Heirlooms" "Grant Calix's Heirlooms|gem4"
	/Declare MageSummon4		string outer ${Ini[BuffBot.Settings.ini,Mage,Heirlooms]}
	/Declare MageSummon4Gem		string outer 
	/if (${MageSummon4.Find[|]}) {
		/varset MageSummon4 ${MageSummon4.Arg[1,|]}
		/varset MageSummon4Gem ${MageSummon4.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Arrows].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Arrows" "Grant Quiver of Kalkek|gem1"
	/Declare MageSummonArrows	string outer ${Ini[BuffBot.Settings.ini,Mage,Arrows]}
	/Declare MageSummonArrowsGem	string outer 
	/if (${MageSummonArrows.Find[|]}) {
		/varset MageSummonArrows ${MageSummonArrows.Arg[1,|]}
		/varset MageSummonArrowsGem ${MageSummonArrows.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Invis].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Invis" "Grant Sphere of Air|gem2"
	/Declare MageSummonInvis	string outer ${Ini[BuffBot.Settings.ini,Mage,Invis]}
	/Declare MageSummonInvisGem	string outer 
	/if (${MageSummonInvis.Find[|]}) {
		/varset MageSummonInvis ${MageSummonInvis.Arg[1,|]}
		/varset MageSummonInvisGem ${MageSummonInvis.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Lev].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Lev" "Grant Ring of Levitation|gem3"
	/Declare MageSummonLev	string outer ${Ini[BuffBot.Settings.ini,Mage,Lev]}
	/Declare MageSummonLevGem	string outer 
	/if (${MageSummonLev.Find[|]}) {
		/varset MageSummonLev ${MageSummonLev.Arg[1,|]}
		/varset MageSummonLevGem ${MageSummonLev.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Mod Rod1].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Mod Rod1" "Wand of Arcane Transvergence|gem1"
	/Declare MageSummonModRod1	string outer ${Ini[BuffBot.Settings.ini,Mage,Mod Rod1]}
	/Declare MageSummonModRod1Gem	string outer 
	/if (${MageSummonModRod1.Find[|]}) {
		/varset MageSummonModRod1 ${MageSummonModRod1.Arg[1,|]}
		/varset MageSummonModRod1Gem ${MageSummonModRod1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Mod Rod2].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Mod Rod2" "Wand of Spectral Transvergence|gem2"
	/Declare MageSummonModRod2	string outer ${Ini[BuffBot.Settings.ini,Mage,Mod Rod2]}
	/Declare MageSummonModRod2Gem	string outer 
	/if (${MageSummonModRod2.Find[|]}) {
		/varset MageSummonModRod2 ${MageSummonModRod2.Arg[1,|]}
		/varset MageSummonModRod2Gem ${MageSummonModRod2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Mod Rod3].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Mod Rod3" "Mass Dark Transvergence|gem3"
	/Declare MageSummonModRod3	string outer ${Ini[BuffBot.Settings.ini,Mage,Mod Rod3]}
	/Declare MageSummonModRod3Gem	string outer 
	/if (${MageSummonModRod3.Find[|]}) {
		/varset MageSummonModRod3 ${MageSummonModRod3.Arg[1,|]}
		/varset MageSummonModRod3Gem ${MageSummonModRod3.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Mod Rod4].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Mod Rod4" "Wand of Ethereal Transvergence|gem4"
	/Declare MageSummonModRod4	string outer ${Ini[BuffBot.Settings.ini,Mage,Mod Rod4]}
	/Declare MageSummonModRod4Gem	string outer 
	/if (${MageSummonModRod4.Find[|]}) {
		/varset MageSummonModRod4 ${MageSummonModRod4.Arg[1,|]}
		/varset MageSummonModRod4Gem ${MageSummonModRod4.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Mage,Dmg Rod].Length}) /call SetIni "BuffBot.Settings.ini" "Mage" "Dmg Rod" "Grant Frostrift Paradox|gem5"
	/Declare MageSummonDmgRod	string outer ${Ini[BuffBot.Settings.ini,Mage,Dmg Rod]}
	/Declare MageSummonDmgRodGem	string outer 
	/if (${MageSummonDmgRod.Find[|]}) {
		/varset MageSummonDmgRod ${MageSummonDmgRod.Arg[1,|]}
		/varset MageSummonDmgRodGem ${MageSummonDmgRod.Arg[2,|]}
	}
|------------------------------------------------------------|
|          Mage
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Ranger
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Ranger,1-45 HP].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "1-45 HP" "Strength of Nature|gem1"
	/Declare RangerLowLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Ranger,1-45 HP]}
	/Declare RangerLowLvlBuff1Gem	string outer
	/if (${RangerLowLvlBuff1.Find[|]}) {
		/varset RangerLowLvlBuff1 ${RangerLowLvlBuff1.Arg[1,|]}
		/varset RangerLowLvlBuff1Gem ${RangerLowLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Ranger,1-45 DS].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "1-45 DS" "Call of Earth|gem2"
	/Declare RangerLowLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Ranger,1-45 DS]}
	/Declare RangerLowLvlBuff2Gem	string outer 
	/if (${RangerLowLvlBuff2.Find[|]}) {
		/varset RangerLowLvlBuff2 ${RangerLowLvlBuff2.Arg[1,|]}
		/varset RangerLowLvlBuff2Gem ${RangerLowLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Ranger,1-45 Attack].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "1-45 Attack" "Mark of the Predator|gem3"
	/Declare RangerLowLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Ranger,1-45 Attack]}
	/Declare RangerLowLvlBuff3Gem	string outer 
	/if (${RangerLowLvlBuff3.Find[|]}) {
		/varset RangerLowLvlBuff3 ${RangerLowLvlBuff3.Arg[1,|]}
		/varset RangerLowLvlBuff3Gem ${RangerLowLvlBuff3.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Ranger,1-45 SoW].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "1-45 SoW" "Spirit of Wolf|gem4"
	/Declare RangerLowLvlBuff4	string outer ${Ini[BuffBot.Settings.ini,Ranger,1-45 SoW]}
	/Declare RangerLowLvlBuff4Gem	string outer 
	/if (${RangerLowLvlBuff4.Find[|]}) {
		/varset RangerLowLvlBuff4 ${RangerLowLvlBuff4.Arg[1,|]}
		/varset RangerLowLvlBuff4Gem ${RangerLowLvlBuff4.Arg[2,|]}
	}
|------------------------------------------------------------|	
	/if (!${Ini[BuffBot.Settings.ini,Ranger,46-60 HP].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "46-60 HP" "Strength of Tunare|gem1"
	/Declare RangerMedLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Ranger,46-60 HP]}
	/Declare RangerMedLvlBuff1Gem	string outer
	/if (${RangerMedLvlBuff1.Find[|]}) {
		/varset RangerMedLvlBuff1 ${RangerMedLvlBuff1.Arg[1,|]}
		/varset RangerMedLvlBuff1Gem ${RangerMedLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Ranger,46-60 DS].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "46-60 DS" "Call of the Rathe|gem2"
	/Declare RangerMedLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Ranger,46-60 DS]}
	/Declare RangerMedLvlBuff2Gem	string outer 
	/if (${RangerMedLvlBuff2.Find[|]}) {
		/varset RangerMedLvlBuff2 ${RangerMedLvlBuff2.Arg[1,|]}
		/varset RangerMedLvlBuff2Gem ${RangerMedLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Ranger,46-60 Attack].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "46-60 Attack" "Call of the Predator|gem3"
	/Declare RangerMedLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Ranger,46-60 Attack]}
	/Declare RangerMedLvlBuff3Gem	string outer 
	/if (${RangerMedLvlBuff3.Find[|]}) {
		/varset RangerMedLvlBuff3 ${RangerMedLvlBuff3.Arg[1,|]}
		/varset RangerMedLvlBuff3Gem ${RangerMedLvlBuff3.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Ranger,61+ HP].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "61+ HP" "Shout of the Copsestalker|gem1"
	/Declare RangerHighLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Ranger,61+ HP]}
	/Declare RangerHighLvlBuff1Gem	string outer
	/if (${RangerHighLvlBuff1.Find[|]}) {
		/varset RangerHighLvlBuff1 ${RangerHighLvlBuff1.Arg[1,|]}
		/varset RangerHighLvlBuff1Gem ${RangerHighLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Ranger,61+ DS].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "61+ DS" "Cloak of Nettlespears|gem2"
	/Declare RangerHighLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Ranger,61+ DS]}
	/Declare RangerHighLvlBuff2Gem	string outer 
	/if (${RangerHighLvlBuff2.Find[|]}) {
		/varset RangerHighLvlBuff2 ${RangerHighLvlBuff2.Arg[1,|]}
		/varset RangerHighLvlBuff2Gem ${RangerHighLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Ranger,61+ Attack].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "61+ Attack" "Bellow of the Predator|gem3"
	/Declare RangerHighLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Ranger,61+ Attack]}
	/Declare RangerHighLvlBuff3Gem	string outer 
	/if (${RangerHighLvlBuff3.Find[|]}) {
		/varset RangerHighLvlBuff3 ${RangerHighLvlBuff3.Arg[1,|]}
		/varset RangerHighLvlBuff3Gem ${RangerHighLvlBuff3.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Ranger,61+ Enrichment].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "61+ Enrichment" "Copsestalker's Enrichment|gem4"
	/Declare RangerHighLvlBuff4	string outer ${Ini[BuffBot.Settings.ini,Ranger,61+ Enrichment]}
	/Declare RangerHighLvlBuff4Gem	string outer
	/if (${RangerHighLvlBuff4.Find[|]}) {
		/varset RangerHighLvlBuff4 ${RangerHighLvlBuff4.Arg[1,|]}
		/varset RangerHighLvlBuff4Gem ${RangerHighLvlBuff4.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Ranger,46+ SoW].Length}) /call SetIni "BuffBot.Settings.ini" "Ranger" "46+ SoW" "Spirit of Eagle|gem5"
	/Declare RangerHighLvlBuff5	string outer ${Ini[BuffBot.Settings.ini,Ranger,46+ SoW]}
	/Declare RangerHighLvlBuff5Gem	string outer
	/if (${RangerHighLvlBuff5.Find[|]}) {
		/varset RangerHighLvlBuff5 ${RangerHighLvlBuff5.Arg[1,|]}
		/varset RangerHighLvlBuff5Gem ${RangerHighLvlBuff5.Arg[2,|]}
	}
|------------------------------------------------------------|
|          Ranger
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Shaman
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Shaman,1-45 HP].Length}) /call SetIni "BuffBot.Settings.ini" "Shaman" "1-45 HP" "Harnessing of Spirit|gem1"
	/Declare ShamanLowLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Shaman,1-45 HP]}
	/Declare ShamanLowLvlBuff1Gem	string outer 
	/if (${ShamanLowLvlBuff1.Find[|]}) {
		/varset ShamanLowLvlBuff1 ${ShamanLowLvlBuff1.Arg[1,|]}
		/varset ShamanLowLvlBuff1Gem ${ShamanLowLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Shaman,1-45 Regen].Length}) /call SetIni "BuffBot.Settings.ini" "Shaman" "1-45 Regen" "Chloroplast|gem2"
	/Declare ShamanLowLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Shaman,1-45 Regen]}
	/Declare ShamanLowLvlBuff2Gem	string outer 
	/if (${ShamanLowLvlBuff2.Find[|]}) {
		/varset ShamanLowLvlBuff2 ${ShamanLowLvlBuff2.Arg[1,|]}
		/varset ShamanLowLvlBuff2Gem ${ShamanLowLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Shaman,1-45 SoW].Length}) /call SetIni "BuffBot.Settings.ini" "Shaman" "1-45 SoW" "Spirit of Bih`Li|gem2"
	/Declare ShamanLowLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Shaman,1-45 SoW]}
	/Declare ShamanLowLvlBuff3Gem	string outer 
	/if (${ShamanLowLvlBuff3.Find[|]}) {
		/varset ShamanLowLvlBuff3 ${ShamanLowLvlBuff3.Arg[1,|]}
		/varset ShamanLowLvlBuff3Gem ${ShamanLowLvlBuff3.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Shaman,1-105 Haste].Length}) /call SetIni "BuffBot.Settings.ini" "Shaman" "1-105 Haste" "Talisman of Celerity|alt"
	/Declare ShamanLowLvlBuff4	string outer ${Ini[BuffBot.Settings.ini,Shaman,1-105 Haste]}
	/Declare ShamanLowLvlBuff4Gem	string outer 
	/if (${ShamanLowLvlBuff4.Find[|]}) {
		/varset ShamanLowLvlBuff4 ${ShamanLowLvlBuff4.Arg[1,|]}
		/varset ShamanLowLvlBuff4Gem ${ShamanLowLvlBuff4.Arg[2,|]}
	}
|------------------------------------------------------------|	
	/if (!${Ini[BuffBot.Settings.ini,Shaman,46-60 HP].Length}) /call SetIni "BuffBot.Settings.ini" "Shaman" "46-60 HP" "Focus of Soul|gem1"
	/Declare ShamanMedLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Shaman,46-60 HP]}
	/Declare ShamanMedLvlBuff1Gem	string outer 
	/if (${ShamanMedLvlBuff1.Find[|]}) {
		/varset ShamanMedLvlBuff1 ${ShamanMedLvlBuff1.Arg[1,|]}
		/varset ShamanMedLvlBuff1Gem ${ShamanMedLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Shaman,46-60 Regen].Length}) /call SetIni "BuffBot.Settings.ini" "Shaman" "46-60 Regen" "Replenishment|gem2"
	/Declare ShamanMedLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Shaman,46-60 Regen]}
	/Declare ShamanMedLvlBuff2Gem	string outer 
	/if (${ShamanMedLvlBuff2.Find[|]}) {
		/varset ShamanMedLvlBuff2 ${ShamanMedLvlBuff2.Arg[1,|]}
		/varset ShamanMedLvlBuff2Gem ${ShamanMedLvlBuff2.Arg[2,|]}
	}
|------------------------------------------------------------|	
	/if (!${Ini[BuffBot.Settings.ini,Shaman,61+ HP].Length}) /call SetIni "BuffBot.Settings.ini" "Shaman" "61+ HP" "Unity of the Doomscale|gem1"
	/Declare ShamanHighLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Shaman,61+ HP]}
	/Declare ShamanHighLvlBuff1Gem	string outer 
	/if (${ShamanHighLvlBuff1.Find[|]}) {
		/varset ShamanHighLvlBuff1 ${ShamanHighLvlBuff1.Arg[1,|]}
		/varset ShamanHighLvlBuff1Gem ${ShamanHighLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Shaman,61+ Regen].Length}) /call SetIni "BuffBot.Settings.ini" "Shaman" "61+ Regen" "Spirit of the Faithful|gem2"
	/Declare ShamanHighLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Shaman,61+ Regen]}
	/Declare ShamanHighLvlBuff2Gem	string outer 
	/if (${ShamanHighLvlBuff2.Find[|]}) {
		/varset ShamanHighLvlBuff2 ${ShamanHighLvlBuff2.Arg[1,|]}
		/varset ShamanHighLvlBuff2Gem ${ShamanHighLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Shaman,61+ SoW].Length}) /call SetIni "BuffBot.Settings.ini" "Shaman" "61+ SoW" "Spirit of Tala'Tak|gem2"
	/Declare ShamanHighLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Shaman,61+ SoW]}
	/Declare ShamanHighLvlBuff3Gem	string outer 
	/if (${ShamanHighLvlBuff3.Find[|]}) {
		/varset ShamanHighLvlBuff3 ${ShamanHighLvlBuff3.Arg[1,|]}
		/varset ShamanHighLvlBuff3Gem ${ShamanHighLvlBuff3.Arg[2,|]}
	}
|------------------------------------------------------------|
|          Shaman
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Beastlord
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Beastlord,1-45 HP].Length}) /call SetIni "BuffBot.Settings.ini" "Beastlord" "1-45 HP" "Spiritual Light|gem1"
	/Declare BeastLowLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Beastlord,1-45 HP]}
	/Declare BeastLowLvlBuff1Gem	string outer 
	/if (${BeastLowLvlBuff1.Find[|]}) {
		/varset BeastLowLvlBuff1 ${BeastLowLvlBuff1.Arg[1,|]}
		/varset BeastLowLvlBuff1Gem ${BeastLowLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Beastlord,1-45 Attack].Length}) /call SetIni "BuffBot.Settings.ini" "Beastlord" "1-45 Attack" "Spiritual Brawn|gem2"
	/Declare BeastLowLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Beastlord,1-45 Attack]}
	/Declare BeastLowLvlBuff2Gem	string outer 
	/if (${BeastLowLvlBuff2.Find[|]}) {
		/varset BeastLowLvlBuff2 ${BeastLowLvlBuff2.Arg[1,|]}
		/varset BeastLowLvlBuff2Gem ${BeastLowLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Beastlord,1-45 SoW].Length}) /call SetIni "BuffBot.Settings.ini" "Beastlord" "1-45 SoW" "Spirit of Wolf|gem3"
	/Declare BeastLowLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Beastlord,1-45 SoW]}
	/Declare BeastLowLvlBuff3Gem	string outer 
	/if (${BeastLowLvlBuff3.Find[|]}) {
		/varset BeastLowLvlBuff3 ${BeastLowLvlBuff3.Arg[1,|]}
		/varset BeastLowLvlBuff3Gem ${BeastLowLvlBuff3.Arg[2,|]}
	}
|------------------------------------------------------------|	
	/if (!${Ini[BuffBot.Settings.ini,Beastlord,46-60 HP].Length}) /call SetIni "BuffBot.Settings.ini" "Beastlord" "46-60 HP" "Spiritual Dominion|gem1"
	/Declare BeastMedLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Beastlord,46-60 HP]}
	/Declare BeastMedLvlBuff1Gem	string outer 
	/if (${BeastMedLvlBuff1.Find[|]}) {
		/varset BeastMedLvlBuff1 ${BeastMedLvlBuff1.Arg[1,|]}
		/varset BeastMedLvlBuff1Gem ${BeastMedLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Beastlord,46-60 Attack].Length}) /call SetIni "BuffBot.Settings.ini" "Beastlord" "46-60 Attack" "Spiritual Vigor|gem2"
	/Declare BeastMedLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Beastlord,46-60 Attack]}
	/Declare BeastMedLvlBuff2Gem	string outer 
	/if (${BeastMedLvlBuff2.Find[|]}) {
		/varset BeastMedLvlBuff2 ${BeastMedLvlBuff2.Arg[1,|]}
		/varset BeastMedLvlBuff2Gem ${BeastMedLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Beastlord,46+ SoW].Length}) /call SetIni "BuffBot.Settings.ini" "Beastlord" "46+ SoW" "Spirit of Tala'Tak|gem3"
	/Declare BeastMedLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Beastlord,46+ SoW]}
	/Declare BeastMedLvlBuff3Gem	string outer 
	/if (${BeastMedLvlBuff3.Find[|]}) {
		/varset BeastMedLvlBuff3 ${BeastMedLvlBuff3.Arg[1,|]}
		/varset BeastMedLvlBuff3Gem ${BeastMedLvlBuff3.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Beastlord,61+ HP].Length}) /call SetIni "BuffBot.Settings.ini" "Beastlord" "61+ HP" "Stormblood's Unity|gem1"
	/Declare BeastHighLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Beastlord,61+ HP]}
	/Declare BeastHighLvlBuff1Gem	string outer 
	/if (${BeastHighLvlBuff1.Find[|]}) {
		/varset BeastHighLvlBuff1 ${BeastHighLvlBuff1.Arg[1,|]}
		/varset BeastHighLvlBuff1Gem ${BeastHighLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Beastlord,61+ Attack].Length}) /call SetIni "BuffBot.Settings.ini" "Beastlord" "61+ Attack" "Spiritual Vivification|gem2"
	/Declare BeastHighLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Beastlord,61+ Attack]}
	/Declare BeastHighLvlBuff2Gem	string outer 
	/if (${BeastHighLvlBuff2.Find[|]}) {
		/varset BeastHighLvlBuff2 ${BeastHighLvlBuff2.Arg[1,|]}
		/varset BeastHighLvlBuff2Gem ${BeastHighLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Beastlord,Fero].Length}) /call SetIni "BuffBot.Settings.ini" "Beastlord" "Fero" "Shared Merciless Ferocity|gem4"
	/Declare BeastHighLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Beastlord,Fero]}
	/Declare BeastHighLvlBuff3Gem	string outer 
	/if (${BeastHighLvlBuff3.Find[|]}) {
		/varset BeastHighLvlBuff3 ${BeastHighLvlBuff3.Arg[1,|]}
		/varset BeastHighLvlBuff3Gem ${BeastHighLvlBuff3.Arg[2,|]}
	}
|------------------------------------------------------------|
|          Beastlord
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Cleric
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Cleric,1-45 HP].Length}) /call SetIni "BuffBot.Settings.ini" "Cleric" "1-45 HP" "Temperance|gem1"
	/Declare ClericLowLvlBuff	string outer ${Ini[BuffBot.Settings.ini,Cleric,1-45 HP]}
	/Declare ClericLowLvlBuffGem	string outer 
	/if (${ClericLowLvlBuff.Find[|]}) {
		/varset ClericLowLvlBuff ${ClericLowLvlBuff.Arg[1,|]}
		/varset ClericLowLvlBuffGem ${ClericLowLvlBuff.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Cleric,Rez].Length}) /call SetIni "BuffBot.Settings.ini" "Cleric" "Rez" "Reviviscence|gem8"
	/Declare ClericRez	string outer ${Ini[BuffBot.Settings.ini,Cleric,Rez]}
	/Declare ClericRezGem	string outer 
	/if (${ClericRez.Find[|]}) {
		/varset ClericRez ${ClericRez.Arg[1,|]}
		/varset ClericRezGem ${ClericRez.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Cleric,46-60 HP].Length}) /call SetIni "BuffBot.Settings.ini" "Cleric" "46-60 HP" "Virtue|gem1"
	/Declare ClericMedLvlBuff	string outer ${Ini[BuffBot.Settings.ini,Cleric,46-60 HP]}
	/Declare ClericMedLvlBuffGem	string outer 
	/if (${ClericMedLvlBuff.Find[|]}) {
		/varset ClericMedLvlBuff ${ClericMedLvlBuff.Arg[1,|]}
		/varset ClericMedLvlBuffGem ${ClericMedLvlBuff.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Cleric,61+ HP].Length}) /call SetIni "BuffBot.Settings.ini" "Cleric" "61+ HP" "Unified Surety|gem1"
	/Declare ClericHighLvlBuff	string outer ${Ini[BuffBot.Settings.ini,Cleric,61+ HP]}
	/Declare ClericHighLvlBuffGem	string outer 
	/if (${ClericHighLvlBuff.Find[|]}) {
		/varset ClericHighLvlBuff ${ClericHighLvlBuff.Arg[1,|]}
		/varset ClericHighLvlBuffGem ${ClericHighLvlBuff.Arg[2,|]}
	}
|------------------------------------------------------------|
|          Cleric
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Druid
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Druid,1-45 DS].Length}) /call SetIni "BuffBot.Settings.ini" "Druid" "1-45 DS" "Shield of Thorns|gem1"
	/Declare DruidLowLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Druid,1-45 DS]}
	/Declare DruidLowLvlBuff1Gem	string outer 
	/if (${DruidLowLvlBuff1.Find[|]}) {
		/varset DruidLowLvlBuff1 ${DruidLowLvlBuff1.Arg[1,|]}
		/varset DruidLowLvlBuff1Gem ${DruidLowLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Druid,1-45 HP].Length}) /call SetIni "BuffBot.Settings.ini" "Druid" "1-45 HP" "Skin like Nature|gem2"
	/Declare DruidLowLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Druid,1-45 HP]}
	/Declare DruidLowLvlBuff2Gem	string outer 
	/if (${DruidLowLvlBuff2.Find[|]}) {
		/varset DruidLowLvlBuff2 ${DruidLowLvlBuff2.Arg[1,|]}
		/varset DruidLowLvlBuff2Gem ${DruidLowLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Druid,1-45 SoW].Length}) /call SetIni "BuffBot.Settings.ini" "Druid" "1-45 SoW" "Spirit of Wolf|gem3"
	/Declare DruidLowLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Druid,1-45 SoW]}
	/Declare DruidLowLvlBuff3Gem	string outer 
	/if (${DruidLowLvlBuff3.Find[|]}) {
		/varset DruidLowLvlBuff3 ${DruidLowLvlBuff3.Arg[1,|]}
		/varset DruidLowLvlBuff3Gem ${DruidLowLvlBuff3.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Druid,46-60 DS].Length}) /call SetIni "BuffBot.Settings.ini" "Druid" "46-60 DS" "Shield of Bracken|gem1"
	/Declare DruidMedLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Druid,46-60 DS]}
	/Declare DruidMedLvlBuff1Gem	string outer 
	/if (${DruidMedLvlBuff1.Find[|]}) {
		/varset DruidMedLvlBuff1 ${DruidMedLvlBuff1.Arg[1,|]}
		/varset DruidMedLvlBuff1Gem ${DruidMedLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Druid,46-60 HP].Length}) /call SetIni "BuffBot.Settings.ini" "Druid" "46-60 HP" "Protection of the Nine|gem2"
	/Declare DruidMedLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Druid,46-60 HP]}
	/Declare DruidMedLvlBuff2Gem	string outer 
	/if (${DruidMedLvlBuff2.Find[|]}) {
		/varset DruidMedLvlBuff2 ${DruidMedLvlBuff2.Arg[1,|]}
		/varset DruidMedLvlBuff2Gem ${DruidMedLvlBuff2.Arg[2,|]}
	}
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,Druid,61+ DS].Length}) /call SetIni "BuffBot.Settings.ini" "Druid" "61+ DS" "Bonebriar Bulwark|gem1"
	/Declare DruidHighLvlBuff1	string outer ${Ini[BuffBot.Settings.ini,Druid,61+ DS]}
	/Declare DruidHighLvlBuff1Gem	string outer 
	/if (${DruidHighLvlBuff1.Find[|]}) {
		/varset DruidHighLvlBuff1 ${DruidHighLvlBuff1.Arg[1,|]}
		/varset DruidHighLvlBuff1Gem ${DruidHighLvlBuff1.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Druid,61+ HP].Length}) /call SetIni "BuffBot.Settings.ini" "Druid" "61+ HP" "Timbercore Skin|gem2"
	/Declare DruidHighLvlBuff2	string outer ${Ini[BuffBot.Settings.ini,Druid,61+ HP]}
	/Declare DruidHighLvlBuff2Gem	string outer 
	/if (${DruidHighLvlBuff2.Find[|]}) {
		/varset DruidHighLvlBuff2 ${DruidHighLvlBuff2.Arg[1,|]}
		/varset DruidHighLvlBuff2Gem ${DruidHighLvlBuff2.Arg[2,|]}
	}
	/if (!${Ini[BuffBot.Settings.ini,Druid,46+ SoW].Length}) /call SetIni "BuffBot.Settings.ini" "Druid" "46+ SoW" "Spirit of Eagle|gem3"
	/Declare DruidHighLvlBuff3	string outer ${Ini[BuffBot.Settings.ini,Druid,46+ SoW]}
	/Declare DruidHighLvlBuff3Gem	string outer 
	/if (${DruidHighLvlBuff3.Find[|]}) {
		/varset DruidHighLvlBuff3 ${DruidHighLvlBuff3.Arg[1,|]}
		/varset DruidHighLvlBuff2Gem ${DruidHighLvlBuff3.Arg[2,|]}
	}
|------------------------------------------------------------|
|          Druid
|------------------------------------------------------------|
|------------------------------------------------------------|
	/Declare TargetName			string outer
|------------------------------------------------------------|
	/if (!${Ini[BuffBot.Settings.ini,General,AFKMessage].Length}) /call SetIni "BuffBot.Settings.ini" "General" "AFKMessage" "Find me in Guild Lobby if you need me."
	/declare AFKMessage string outer ${Ini[BuffBot.Settings.ini,General,AFKMessage]}
	/if (!${Ini[BuffBot.Settings.ini,General,MedMessage].Length}) /call SetIni "BuffBot.Settings.ini" "General" "MedMessage" "...Meditating... Low on mana."
	/declare MedMessage string outer ${Ini[BuffBot.Settings.ini,General,MedMessage]}

	/afk ${AFKMessage}
	/tgb on

	/popup ALL VARIABLES LOADED: Check Mq2 Window for Errors.
	/if (${UseEQBC}) /bccmd connect ${EQBCServerAddr} ${EQBCPort} ${EQBCPassword}

	CHATMETHOD1 [NBB]+ Initialized ++[NBB]
	CHATMETHOD [NBB]+ Initialized ++[NBB]
	CHATMETHOD1 [NBB]++ NEWBIE BUFF BOT STARTED ++[NBB]
	CHATMETHOD [NBB]++ NEWBIE BUFF BOT STARTED ++[NBB]

:MainLoop
	/if (${MacroQuest.GameState.Equal[CHARSELECT]}) /end
	/if (${Cursor.ID}) /autoinventory
	/if (!${Me.AFK}) /afk ${AFKMessage}
	/if (${Me.PctMana} < ${MedAtPct}) /call Med
	/if (${Window[TradeWnd].Open}) /call Money
	/if (!${Me.Mount.ID} && ${UseHorse} && ${Zone.Type}==1 && ${FindItem[${HorseItem}].Name.NotEqual["NULL"]}) /call CASTMODE "${FindItem[${HorseItem}]}" item
	/if (${Me.Standing} && !${Me.Mount.ID}) /sit
	/doevents
	/if (${MacroQuest.GameState.Equal[CHARSELECT]}) /end
	/delay 7
	/goto :MainLoop
	/return
|------------------------------------------------------------|
|          End Main Rountine
|------------------------------------------------------------|

| --------------------------------------------------------------------------------------------
| SUB: GetBalance
| --------------------------------------------------------------------------------------------
	Sub GetBalance(string Account)
	/if (!${Ini[BuffBot.Accounts.ini,Balances,${Account}].Length}) /call SetIni "BuffBot.Accounts.ini" "Balances" "${Account}" "${StartBalance}"
	/echo Account:(${Account}) Balance:(${Ini[BuffBot.Accounts.ini,Balances,${Account}]})
	/return ${Ini[BuffBot.Accounts.ini,Balances,${Account}]}


| --------------------------------------------------------------------------------------------
| SUB: GetFriend
| --------------------------------------------------------------------------------------------
	Sub GetFriend(string Account)
	/if (!${Ini[BuffBot.Friends.ini,Friends,${Account}].Length}) /call SetIni "BuffBot.Friends.ini" "Friends" "${Account}" "FALSE"
	CHATMETHOD1 Account:(${Account}) Friend Status:(${Ini[BuffBot.Friends.ini,Friends,${Account}]})
	/return ${Ini[BuffBot.Friends.ini,Friends,${Account}]}


| --------------------------------------------------------------------------------------------
| SUB: GetGuild
| --------------------------------------------------------------------------------------------
	Sub GetGuild(string Account)
	/if (!${Ini[BuffBot.Guilds.ini,Friends,${Account}].Length}) /call SetIni "BuffBot.Guilds.ini" "Friends" "${Account}" "FALSE"
	CHATMETHOD1 Guild:(${Account}) Friend Status:(${Ini[BuffBot.Guilds.ini,Friends,${Account}]})
	/return ${Ini[BuffBot.Guilds.ini,Friends,${Account}]}


| --------------------------------------------------------------------------------------------
| SUB: SetIni
| --------------------------------------------------------------------------------------------
	Sub SetIni(string filename, string section, string option, string value)
	/ini "${filename}" "${section}" "${option}" "${value}"
	/return

|------------------------------------------------------------|
|          Target Buff Rountine
|------------------------------------------------------------|
| --------------------------------------------------------------------------------------------
| SUB: BuffTarget
| --------------------------------------------------------------------------------------------
	Sub BuffTarget(string WhoToBuff)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${WhoToBuff}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${WhoToBuff}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${WhoToBuff}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${WhoToBuff}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/varset TargetName ${WhoToBuff}
	/if (${TargAccBal}<=${BuffCost} && ${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) {
		ACCOUNTCHAT ${WhoToBuff} (${WhoToBuff})Balance:(${TargAccBal}) Buff Cost:(${BuffCost}) Summon Cost:(${SummonCost})
		/return
	}
	/if (${Me.Sitting}) /stand up
	/if (${Window[TradeWnd].Open}) /call Money
	/delay 2
	/target id ${Spawn[PC ${TargetName}].ID}
	/delay 1s ${Target.ID}
	CHATMETHOD1 Buffing started on ${Target.CleanName}!
	CHATMETHOD Buffing started on ${Target.CleanName}!
	/mqlog Buffing started on ${Target.CleanName}!

	/if (${Window[TradeWnd].Open}) /call Money
	/if (${Spawn[pc ${TargetName}].Pet.ID}) {
		/target ${Spawn[PC ${TargetName}].Pet}
		/delay 1s ${Target.ID}
		/face
		/call Buff
		CHATMETHOD1 Serviced: ${Target.CleanName}
		CHATMETHOD Serviced: ${Target.CleanName}
		/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${WhoToBuff}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${WhoToBuff}]}-${BuffCost}]}"
	}
	/if (${Spawn[PC ${TargetName}].MercID}) {
		/target id ${Spawn[PC ${TargetName}].MercID}
		/delay 1s ${Target.ID}
		/face
		/call Buff
		CHATMETHOD1 Serviced: ${Target.CleanName}
		CHATMETHOD Serviced: ${Target.CleanName}
		/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${WhoToBuff}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${WhoToBuff}]}-${BuffCost}]}"
	}
	/target id ${Spawn[PC ${TargetName}].ID}
	/delay 1s ${Target.ID}
	/face
	/call Buff
	CHATMETHOD1 Serviced: ${Target.CleanName}
	CHATMETHOD Serviced: ${Target.CleanName}
	/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${WhoToBuff}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${WhoToBuff}]}-${BuffCost}]}"
	/mqlog Buffed: ${Target.CleanName}!
	/return
|------------------------------------------------------------|
|          End Target Buff Rountine
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Other Rountines
|------------------------------------------------------------|
| --------------------------------------------------------------------------------------------
| SUB: Med
| --------------------------------------------------------------------------------------------
	Sub Med
	/afk ${MedMessage}
	/if (!${Me.Sitting} && !${Me.Mount.ID}) /sit on
	/delay 5m ${Me.PctMana} > ${DoneMeddingPct}
	/afk ${AFKMessage}
	/return


| --------------------------------------------------------------------------------------------
| SUB: Money
| --------------------------------------------------------------------------------------------
	Sub Money
	/delay 3s ${Window[TradeWnd].Open}
	/delay 3s ${Window[TradeWnd].HisTradeReady}
	/if (${Window[TradeWnd].HisTradeReady}) {
		CHATMETHOD1 Received a donation from ${Target.CleanName}.
		CHATMETHOD Received a donation from ${Target.CleanName}.
		/call GetBalance "${Target.CleanName}"
		/if (${Window[TradeWnd].Child[TRDW_HisMoney0].Text}>=1 ) /call SetIni "BuffBot.Accounts.ini" "Balances" "${Target.CleanName}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${Target.CleanName}]}+${Window[TradeWnd].Child[TRDW_HisMoney0].Text}]}"
		/mqlog Received a donation from ${Target.CleanName}.
		/notify TradeWnd TRDW_Trade_Button leftmouseup
	}
	/delay 2s !${Window[TradeWnd].Open}
	/return


| --------------------------------------------------------------------------------------------
| SUB: Port
| --------------------------------------------------------------------------------------------
	Sub Port(string PortTarget, string PortToCast)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${PortTarget}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${PortTarget}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${PortTarget}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${PortTarget}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/if (${TargAccBal}<=${PortCost} && ${AccountMode}  && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) {
		ACCOUNTCHAT ${PortTarget} (${PortToCast})Balance:(${TargAccBal}) Buff Cost:(${BuffCost}) Summon Cost:(${SummonCost})
		/return
	}
	/if (${Me.Class.Name.Equal[Druid]} || ${Me.Class.Name.Equal[Wizard]}) {
		/varset TargetName ${PortTarget}
		/if (${Me.Sitting}) /stand up
		/if (${Window[TradeWnd].Open}) /call Money
		/delay 2
		/target id ${Spawn[PC ${TargetName}].ID}
		/delay 1s ${Target.ID}
		CHATMETHOD1 Porting: ${Target.CleanName} -- ${PortToCast} --
		CHATMETHOD Porting: ${Target.CleanName} -- ${PortToCast} --
		/mqlog Porting: ${Target.CleanName} -- ${PortToCast} --
		/call CASTMODE "${PortToCast}" ${PortGem}
		/delay 1s !${Me.Casting.ID}
		/if (${AccountMode}  && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${PortTarget}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${PortToCast}]}-${PortCost}]}"
	}
	/return


| --------------------------------------------------------------------------------------------
| SUB: Buff
| --------------------------------------------------------------------------------------------
	Sub Buff
|------------------------------------------------------------|
|          Enchanter
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Enchanter]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${EncLowLvlBuff1}].RankName}" ${EncLowLvlBuff1Gem} 15s
	/if (${Me.Class.Name.Equal[Enchanter]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${EncMedLvlBuff1}].RankName}" ${EncMedLvlBuff1Gem} 15s
	/if (${Me.Class.Name.Equal[Enchanter]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${EncHighLvlBuff1}].RankName}" ${EncHighLvlBuff1Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Enchanter]} && ${Spawn[ID ${Target.ID}].Level} <= 41) /call CASTMODE "${Spell[${EncLowLvlBuff2}].RankName}" ${EncLowLvlBuff2Gem} 15s
	/if (${Me.Class.Name.Equal[Enchanter]} && ${Spawn[ID ${Target.ID}].Level} >= 42 && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${EncLowLvlBuff3}].RankName}" ${EncLowLvlBuff3Gem} 15s
	/if (${Me.Class.Name.Equal[Enchanter]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${EncMedLvlBuff2}].RankName}" ${EncMedLvlBuff2Gem} 15s
	/if (${Me.Class.Name.Equal[Enchanter]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${EncHighLvlBuff2}].RankName}" ${EncHighLvlBuff2Gem} 15s
|------------------------------------------------------------|
|          Enchanter
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Mage
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Magician]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${MageLowLvlBuff}].RankName}" ${MageLowLvlBuffGem} 15s
	/if (${Me.Class.Name.Equal[Magician]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${MageMedLvlBuff}].RankName}" ${MageMedLvlBuffGem} 15s
	/if (${Me.Class.Name.Equal[Magician]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${MageHighLvlBuff}].RankName}" ${MageHighLvlBuffGem} 15s
|------------------------------------------------------------|
|          Mage
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Ranger
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${RangerLowLvlBuff1}].RankName}" ${RangerLowLvlBuff1Gem} 15s
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${RangerMedLvlBuff1}].RankName}" ${RangerMedLvlBuff1Gem} 15s
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${RangerHighLvlBuff1}].RankName}" ${RangerHighLvlBuff1Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${RangerLowLvlBuff2}].RankName}" ${RangerLowLvlBuff2Gem} 15s
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${RangerMedLvlBuff2}].RankName}" ${RangerMedLvlBuff2Gem} 15s
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${RangerHighLvlBuff2}].RankName}" ${RangerHighLvlBuff2Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${RangerLowLvlBuff3}].RankName}" ${RangerLowLvlBuff3Gem} 15s
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${RangerMedLvlBuff3}].RankName}" ${RangerMedLvlBuff3Gem} 15s
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${RangerHighLvlBuff3}].RankName}" ${RangerHighLvlBuff3Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${RangerLowLvlBuff4}].RankName}" ${RangerLowLvlBuff4Gem} 15s
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} >= 47) /call CASTMODE "${Spell[${RangerHighLvlBuff5}].RankName}" ${RangerHighLvlBuff5Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Ranger]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${RangerHighLvlBuff4}].RankName}" ${RangerHighLvlBuff4Gem} 15s
|------------------------------------------------------------|
|          Ranger
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Shaman
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Shaman]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${ShamanLowLvlBuff1}].RankName}" ${ShamanLowLvlBuff1Gem} 15s
	/if (${Me.Class.Name.Equal[Shaman]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${ShamanMedLvlBuff1}].RankName}" ${ShamanMedLvlBuff1Gem} 15s
	/if (${Me.Class.Name.Equal[Shaman]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${ShamanHighLvlBuff1}].RankName}" ${ShamanHighLvlBuff1Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Shaman]} && ${Me.AltAbilityReady[${ShamanLowLvlBuff4}]}) /call CASTMODE "${ShamanLowLvlBuff4}" ${ShamanLowLvlBuff4Gem}
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Shaman]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${ShamanLowLvlBuff2}].RankName}" ${ShamanLowLvlBuff2Gem} 15s
	/if (${Me.Class.Name.Equal[Shaman]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${ShamanMedLvlBuff2}].RankName}" ${ShamanMedLvlBuff2Gem} 15s
	/if (${Me.Class.Name.Equal[Shaman]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${ShamanHighLvlBuff2}].RankName}" ${ShamanHighLvlBuff2Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Shaman]} && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${ShamanLowLvlBuff3}].RankName}" ${ShamanLowLvlBuff3Gem} 15s
	/if (${Me.Class.Name.Equal[Shaman]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${ShamanHighLvlBuff3}].RankName}" ${ShamanHighLvlBuff3Gem} 15s
|------------------------------------------------------------|
|          Shaman
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Beastlord
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Beastlord]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${BeastLowLvlBuff1}].RankName}" ${BeastLowLvlBuff1Gem} 15s
	/if (${Me.Class.Name.Equal[Beastlord]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${BeastMedLvlBuff1}].RankName}" ${BeastMedLvlBuff1Gem} 15s
	/if (${Me.Class.Name.Equal[Beastlord]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${BeastHighLvlBuff1}].RankName}" ${BeastHighLvlBuff1Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Beastlord]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${BeastLowLvlBuff2}].RankName}" ${BeastLowLvlBuff2Gem} 15s
	/if (${Me.Class.Name.Equal[Beastlord]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${BeastMedLvlBuff2}].RankName}" ${BeastMedLvlBuff2Gem} 15s
	/if (${Me.Class.Name.Equal[Beastlord]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${BeastHighLvlBuff2}].RankName}" ${BeastHighLvlBuff2Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Beastlord]} && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${BeastLowLvlBuff3}].RankName}" ${BeastLowLvlBuff3Gem} 15s
	/if (${Me.Class.Name.Equal[Beastlord]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE ""${Spell[${BeastMedLvlBuff3}].RankName}" ${BeastMedLvlBuff3Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Beastlord]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${BeastHighLvlBuff3}].RankName}" ${BeastHighLvlBuff3Gem} 15s
|------------------------------------------------------------|
|          Beastlord
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Cleric
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Cleric]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${ClericLowLvlBuff}].RankName}" ${ClericLowLvlBuffGem}  15s
	/if (${Me.Class.Name.Equal[Cleric]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${ClericMedLvlBuff}].RankName}" ${ClericMedLvlBuffGem}  15s
	/if (${Me.Class.Name.Equal[Cleric]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${ClericHighLvlBuff}].RankName}" ${ClericHighLvlBuffGem} 15s
|------------------------------------------------------------|
|          Cleric
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Druid
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Druid]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${DruidLowLvlBuff1}].RankName}" ${DruidLowLvlBuff1Gem} 15s
	/if (${Me.Class.Name.Equal[Druid]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${DruidMedLvlBuff1}].RankName}" ${DruidMedLvlBuff1Gem} 15s
	/if (${Me.Class.Name.Equal[Druid]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${DruidHighLvlBuff1}].RankName}" ${DruidHighLvlBuff1Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Druid]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${DruidLowLvlBuff2}].RankName}" ${DruidLowLvlBuff2Gem} 15s
	/if (${Me.Class.Name.Equal[Druid]} && ${Spawn[ID ${Target.ID}].Level} >= 47 && ${Spawn[ID ${Target.ID}].Level} <= 60) /call CASTMODE "${Spell[${DruidMedLvlBuff2}].RankName}" ${DruidMedLvlBuff2Gem} 15s
	/if (${Me.Class.Name.Equal[Druid]} && ${Spawn[ID ${Target.ID}].Level} >= 61) /call CASTMODE "${Spell[${DruidHighLvlBuff2}].RankName}" ${DruidHighLvlBuff2Gem} 15s
|------------------------------------------------------------|
	/if (${Me.Class.Name.Equal[Druid]} && ${Spawn[ID ${Target.ID}].Level} <= 46) /call CASTMODE "${Spell[${DruidLowLvlBuff3}].RankName}" ${DruidLowLvlBuff3Gem} 15s
	/if (${Me.Class.Name.Equal[Druid]} && ${Spawn[ID ${Target.ID}].Level} >= 47) /call CASTMODE "${Spell[${DruidHighLvlBuff3}].RankName}" ${DruidHighLvlBuff3Gem} 15s
|------------------------------------------------------------|
|          Druid
|------------------------------------------------------------|
	/return
|------------------------------------------------------------|
|          End Other Rountines
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Events
|------------------------------------------------------------|
| --------------------------------------------------------------------------------------------
| SUB: Event_Hail
| --------------------------------------------------------------------------------------------
	Sub Event_Hail(Line,Sender)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${Sender}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${Sender}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${Sender}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	
	/if (${Me.Class.Name.Equal[Necromancer]} && ${Advertise}) ADVERTISECHAT ${Sender} Please invite me to "summon" your corpse.
	/if (${Me.Class.Name.Equal[Magician]} && ${Advertise}) ADVERTISECHAT ${Sender} Please say toys, toys (1-20), rod, drod, invis, other, or arrows.
	/if (${Me.Class.Name.Equal[Druid]} && ${Advertise}) ADVERTISECHAT ${Sender} Please say "ports" for a list of ports.
	/if (${Me.Class.Name.Equal[Wizard]} && ${Advertise}) ADVERTISECHAT ${Sender} Please say "ports" for a list of ports.
	/if (!${Me.Class.Name.Equal[Necromancer]} && !${Me.Class.Name.Equal[Wizard]}) /call BuffTarget "${Sender}"
	/return

|------------------------------------------------------------|
|          Mage Events
|------------------------------------------------------------|
| --------------------------------------------------------------------------------------------
| SUB: SummonToys
| --------------------------------------------------------------------------------------------
	Sub SummonToys(string ToyTarget, int RequestedAmount)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${ToyTarget}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${ToyTarget}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${ToyTarget}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${ToyTarget}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/if (${TargAccBal}<=${SummonCost} && ${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) {
		ACCOUNTCHAT ${PortTarget} (${ToyTarget})Balance:(${TargAccBal}) Buff Cost:(${BuffCost}) Summon Cost:(${SummonCost})
		/return
	}
	/if (${Me.Class.Name.Equal[Magician]}) {
		/varset TargetName ${ToyTarget}
		/if (${Me.Sitting}) /stand up
		/delay 2
		/target id ${Spawn[PC ${TargetName}].ID}
		/delay 1s ${Target.ID}

		/declare ToyAmount int local 0
		/if (${RequestedAmount} >= ${MaxRequests}) {
			/varset ToyAmount ${MaxRequests}
		} else {
			/varset ToyAmount ${RequestedAmount}
		}

		CHATMETHOD1 Giving Weapons ${ToyAmount} : ${Target.CleanName}
		CHATMETHOD Giving Weapons ${ToyAmount} : ${Target.CleanName}
		/mqlog Giving Weapons ${ToyAmount} : ${Target.CleanName}

		/declare i int local 1
		/for i 1 to ${ToyAmount}
			/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummon1}].RankName}" ${MageSummon1Gem} 15s
			/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummon2}].RankName}" ${MageSummon2Gem} 15s
			/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummon3}].RankName}" ${MageSummon3Gem} 15s
			/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummon4}].RankName}" ${MageSummon4Gem} 15s
			/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${ToyTarget}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${ToyTarget}]}-${SummonCost}]}"
		/next i
	}
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Toys
| --------------------------------------------------------------------------------------------
	Sub Event_Toys(Line,Sender)
	/if (${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) /return
	/call SummonToys "${Sender}" "1"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_ToysCustom
| --------------------------------------------------------------------------------------------
	Sub Event_ToysCustom(Line,Sender,Amount)
	/if (${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) /return
	/call SummonToys "${Sender}" "${Amount}"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Arrows
| --------------------------------------------------------------------------------------------
	Sub Event_Arrows(Line,Sender)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${Sender}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${Sender}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${Sender}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/if (${TargAccBal}<=${SummonCost} && ${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) {
		ACCOUNTCHAT ${Sender} (${Sender})Balance:(${TargAccBal}) Buff Cost:(${BuffCost}) Summon Cost:(${SummonCost})
		/return
	}
	/if (${Me.Class.Name.Equal[Magician]}) {
		/varset TargetName ${Sender}
		/if (${Me.Sitting}) /stand up
		/delay 2
		/target id ${Spawn[PC ${TargetName}].ID}
		/delay 1s ${Target.ID}
		CHATMETHOD1 Giving Arrows: ${Target.CleanName}
		CHATMETHOD Giving Arrows: ${Target.CleanName}
		/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${Sender}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${Sender}]}-${SummonCost}]}"
		/mqlog Giving Arrows: ${Target.CleanName}
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonArrows}].RankName}" ${MageSummonArrowsGem} 15s
	}
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Invis
| --------------------------------------------------------------------------------------------
	Sub Event_Invis(Line,Sender)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${Sender}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${Sender}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${Sender}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/if (${TargAccBal}<=${SummonCost} && ${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) {
		ACCOUNTCHAT ${Sender} (${Sender})Balance:(${TargAccBal}) Buff Cost:(${BuffCost}) Summon Cost:(${SummonCost})
		/return
	}
	/if (${Me.Class.Name.Equal[Magician]}) {
		/varset TargetName ${Sender}
		/if (${Me.Sitting}) /stand up
		/delay 2
		/target id ${Spawn[PC ${TargetName}].ID}
		/delay 1s ${Target.ID}
		CHATMETHOD1 Giving Invis Stone: ${Target.CleanName}
		CHATMETHOD Giving Invis Stone: ${Target.CleanName}
		/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${Sender}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${Sender}]}-${SummonCost}]}"
		/mqlog Giving Invis Stone: ${Target.CleanName}
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonInvis}].RankName}" ${MageSummonInvisGem} 15s
	}
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_ModRod
| --------------------------------------------------------------------------------------------
	Sub Event_ModRod(Line,Sender)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${Sender}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${Sender}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${Sender}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/if (${TargAccBal}<=${SummonCost} && ${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) {
		ACCOUNTCHAT ${Sender} (${Sender})Balance:(${TargAccBal}) Buff Cost:(${BuffCost}) Summon Cost:(${SummonCost})
		/return
	}
	/if (${Me.Class.Name.Equal[Magician]}) {
		/varset TargetName ${Sender}
		/if (${Me.Sitting}) /stand up
		/delay 2
		/target id ${Spawn[PC ${TargetName}].ID}
		/delay 1s ${Target.ID}
		CHATMETHOD1 Giving ModRod: ${Target.CleanName}
		CHATMETHOD Giving ModRod: ${Target.CleanName}
		/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${Sender}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${Sender}]}-${SummonCost}]}"
		/mqlog Giving ModRod: ${Target.CleanName}
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonModRod1}].RankName}" ${MageSummonModRod1Gem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonModRod2}].RankName}" ${MageSummonModRod2Gem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonModRod3}].RankName}" ${MageSummonModRod3Gem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonModRod4}].RankName}" ${MageSummonModRod4Gem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "596" alt
	}
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_DmgRod
| --------------------------------------------------------------------------------------------
	Sub Event_DmgRod(Line,Sender)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${Sender}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${Sender}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${Sender}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/if (${TargAccBal}<=${SummonCost} && ${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) {
		ACCOUNTCHAT ${Sender} (${Sender})Balance:(${TargAccBal}) Buff Cost:(${BuffCost}) Summon Cost:(${SummonCost})
		/return
	}
	/if (${Me.Class.Name.Equal[Magician]}) {
		/varset TargetName ${Sender}
		/if (${Me.Sitting}) /stand up
		/delay 2
		/target id ${Spawn[PC ${TargetName}].ID}
		/delay 1s ${Target.ID}
		CHATMETHOD1 Giving ModRod: ${Target.CleanName}
		CHATMETHOD Giving ModRod: ${Target.CleanName}
		/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${Sender}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${Sender}]}-${SummonCost}]}"
		/mqlog Giving ModRod: ${Target.CleanName}
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonDmgRod}].RankName}" ${MageSummonDmgRodGem} 15s
	}
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Other
| --------------------------------------------------------------------------------------------
	Sub Event_Other(Line,Sender)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${Sender}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${Sender}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${Sender}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/if (${TargAccBal}<=${SummonCost} && ${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) {
		ACCOUNTCHAT ${Sender} (${Sender})Balance:(${TargAccBal}) Buff Cost:(${BuffCost}) Summon Cost:(${SummonCost})
		/return
	}
	/if (${Me.Class.Name.Equal[Magician]}) {
		/varset TargetName ${Sender}
		/if (${Me.Sitting}) /stand up
		/delay 2
		/target id ${Spawn[PC ${TargetName}].ID}
		/delay 1s ${Target.ID}
		CHATMETHOD1 Giving Gifts: ${Target.CleanName}
		CHATMETHOD Giving Gifts: ${Target.CleanName}
		/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${Sender}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${Sender}]}-${SummonCost}]}"
		/mqlog Giving Gifts: ${Target.CleanName}
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonInvis}].RankName}" ${MageSummonInvisGem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonLev}].RankName}" ${MageSummonLevGem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonDmgRod}].RankName}" ${MageSummonDmgRodGem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonModRod1}].RankName}" ${MageSummonModRod1Gem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonModRod2}].RankName}" ${MageSummonModRod2Gem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonModRod3}].RankName}" ${MageSummonModRod3Gem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "${Spell[${MageSummonModRod4}].RankName}" ${MageSummonModRod4Gem} 15s
		/if (${Me.Class.Name.Equal[Magician]}) /call CASTMODE "596" alt
	}
	/return
|------------------------------------------------------------|
|          End Mage Events
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Cleric Events
|------------------------------------------------------------|
| --------------------------------------------------------------------------------------------
| SUB: Event_RezMe
| --------------------------------------------------------------------------------------------
	Sub Event_RezMe(Line,Sender)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${Sender}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${Sender}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${Sender}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/if (${TargAccBal}<=${SummonCost} && ${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) {
		ACCOUNTCHAT ${Sender} (${Sender})Balance:(${TargAccBal}) Buff Cost:(${BuffCost}) Summon Cost:(${SummonCost})
		/return
	}
	/if (${Me.Class.Name.Equal[Cleric]}) {
		/varset TargetName ${Sender}
		/if (${Me.Sitting}) /stand up
		/delay 2
		/target ${Sender} corpse
		/delay 5s ${Target.ID}
		CHATMETHOD1 Rezzing: ${Target.CleanName}
		CHATMETHOD Rezzing: ${Target.CleanName}
		/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${Sender}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${Sender}]}-${SummonCost}]}"
		/mqlog Rezzing: ${Target.CleanName}
		/if (${Me.Class.Name.Equal[Cleric]}) /call CASTMODE "${Spell[${ClericRez}].RankName}" ${ClericRezGem} 15s
	}
	/return
|------------------------------------------------------------|
|          End Cleric Events
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Necromancer Events
|------------------------------------------------------------|
| --------------------------------------------------------------------------------------------
| SUB: Event_SummonMe
| --------------------------------------------------------------------------------------------
	Sub Event_SummonMe(Line,Sender)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${Sender}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${Sender}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${Sender}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/if (${TargAccBal}<=${SummonCost} && ${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) {
		ACCOUNTCHAT ${Sender} (${Sender})Balance:(${TargAccBal}) Buff Cost:(${BuffCost}) Summon Cost:(${SummonCost})
		/return
	}
	/if (${Me.Class.Name.Equal[Necromancer]}) {
		/varset TargetName ${Sender}
		/if (${Me.Sitting}) /stand up
		/delay 2
		/target ${Sender} pc
		/delay 5s ${Target.ID}
		CHATMETHOD1 Summoning: ${Target.CleanName}
		CHATMETHOD Summoning: ${Target.CleanName}
		/if (${AccountMode} && (!${TargIsFriend} && !${FriendFree}) && (!${TargGuildIsFriend} && !${GuildFree})) /call SetIni "BuffBot.Accounts.ini" "Balances" "${Sender}" "${Math.Calc[${Ini[BuffBot.Accounts.ini,Balances,${Sender}]}-${SummonCost}]}"
		/mqlog Summoning: ${Target.CleanName}
		/if (${Me.Class.Name.Equal[Necromancer]}) /call CASTMODE "Summon Remains" alt
	}
	/return
|------------------------------------------------------------|
|          End Necromancer Events
|------------------------------------------------------------|
|------------------------------------------------------------|
|          Port Events
|------------------------------------------------------------|
| --------------------------------------------------------------------------------------------
| SUB: Event_Ports
| --------------------------------------------------------------------------------------------
	Sub Event_Ports(Line,Sender)
	/declare TargAccBal int local
	/declare TargIsFriend bool local FALSE
	/declare TargGuildIsFriend bool local FALSE
	/if (${AccountMode}) /call GetBalance "${Sender}"
	/if (${AccountMode}) /varset TargAccBal ${Macro.Return}
	/if (${FriendMode}) /call GetFriend "${Sender}"
	/if (${FriendMode}) /varset TargIsFriend ${Macro.Return}
	/if (${GuildMode}) /call GetGuild "${Spawn[PC ${Sender}].Guild}"
	/if (${GuildMode}) /varset TargGuildIsFriend ${Macro.Return}

	/if ((${BuffGuildOnly} && !${Spawn[PC ${Sender}].Guild.Equal[${Me.Guild}]}) && (!${TargGuildIsFriend} || !${TargIsFriend})) /return
	/if (${Me.Class.Name.Equal[Druid]}) PORTCHAT ${Sender} Available Zephyrs: moors, nexus, tox, butcher, iceclad, karana, cl, sfg, stoneBrunt, grimling, feerrott, steamfont, combines, ro, twilight, gd, wl, cs, misty, pok, lavastorm, undershore, arcstone, natimbi, dawnshroud, barindu, bloodfields, steppes, buriedsea, slaughter, direwind, loping, time, brells, grounds, beasts, pillars, shards, wkarana, lceanium, and tempest
	/if (${Me.Class.Name.Equal[Wizard]}) PORTCHAT ${Sender} Available Translocates: moors, nexus, tox, iceclad, karana, cl, stoneBrunt, grimling, combines, ro, twilight, gd, wl, cs, pok, undershore, arcstone, natimbi, dawnshroud, barindu, bloodfields, slaughter, time, brells, grounds, pillars, wkarana, lceanium, tempest, fay, nek, cazic, bind, sunderock, primary, secondary, icefall, katta, dragonscale, and sarith
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_BlightfireMoors
| --------------------------------------------------------------------------------------------
	Sub Event_BlightfireMoors(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Blightfire Moors"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Blightfire Moors"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Nexus
| --------------------------------------------------------------------------------------------
	Sub Event_Nexus(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Nexus"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Nexus"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Toxxulia
| --------------------------------------------------------------------------------------------
	Sub Event_Toxxulia(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Toxxulia"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Tox"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_ButcherBlock
| --------------------------------------------------------------------------------------------
	Sub Event_ButcherBlock(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Butcherblock"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Iceclad
| --------------------------------------------------------------------------------------------
	Sub Event_Iceclad(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Iceclad"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Iceclad"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Karana
| --------------------------------------------------------------------------------------------
	Sub Event_Karana(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Karana"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate North"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Commonlands
| --------------------------------------------------------------------------------------------
	Sub Event_Commonlands(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Commonlands"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Common"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_SurefallGlade
| --------------------------------------------------------------------------------------------
	Sub Event_SurefallGlade(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Surefall Glade"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_StoneBrunt
| --------------------------------------------------------------------------------------------
	Sub Event_StoneBrunt(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Stonebrunt"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Stonebrunt"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Grimling
| --------------------------------------------------------------------------------------------
	Sub Event_Grimling(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Grimling"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Grimling"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Feerrott
| --------------------------------------------------------------------------------------------
	Sub Event_Feerrott(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Feerrott"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Steamfont
| --------------------------------------------------------------------------------------------
	Sub Event_Steamfont(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Steamfont"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Combines
| --------------------------------------------------------------------------------------------
	Sub Event_Combines(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Combines"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Combine"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Ro
| --------------------------------------------------------------------------------------------
	Sub Event_Ro(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Ro"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Ro"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Twilight
| --------------------------------------------------------------------------------------------
	Sub Event_Twilight(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Twilight"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Twilight"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_GreatDivide
| --------------------------------------------------------------------------------------------
	Sub Event_GreatDivide(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Great Divide"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Great Divide"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_WakeningLands
| --------------------------------------------------------------------------------------------
	Sub Event_WakeningLands(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Wakening Lands"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Wakening Lands"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_CobaltScar
| --------------------------------------------------------------------------------------------
	Sub Event_CobaltScar(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Cobalt Scar"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Cobalt Scar"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Misty
| --------------------------------------------------------------------------------------------
	Sub Event_Misty(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Misty"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_PoKnowledge
| --------------------------------------------------------------------------------------------
	Sub Event_PoKnowledge(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Knowledge"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Knowledge"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_LavaStorm
| --------------------------------------------------------------------------------------------
	Sub Event_LavaStorm(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Lavastorm"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_UnderShore
| --------------------------------------------------------------------------------------------
	Sub Event_UnderShore(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Undershore"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Undershore"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Arcstone
| --------------------------------------------------------------------------------------------
	Sub Event_Arcstone(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Arcstone"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Arcstone"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Natimbi
| --------------------------------------------------------------------------------------------
	Sub Event_Natimbi(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Natimbi"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Natimbi"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Dawnshroud
| --------------------------------------------------------------------------------------------
	Sub Event_Dawnshroud(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Dawnshroud"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Dawnshroud"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Barindu
| --------------------------------------------------------------------------------------------
	Sub Event_Barindu(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Barindu"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Barindu"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Bloodfields
| --------------------------------------------------------------------------------------------
	Sub Event_Bloodfields(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Bloodfields"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Bloodfields"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_TheSteppes
| --------------------------------------------------------------------------------------------
	Sub Event_TheSteppes(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: The Steppes"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_BuriedSea
| --------------------------------------------------------------------------------------------
	Sub Event_BuriedSea(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Buried Sea"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Slaughter
| --------------------------------------------------------------------------------------------
	Sub Event_Slaughter(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Slaughter"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Slaughter"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Direwind
| --------------------------------------------------------------------------------------------
	Sub Event_Direwind(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Direwind"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_LopingPlains
| --------------------------------------------------------------------------------------------
	Sub Event_LopingPlains(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Loping Plains"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_PoTime
| --------------------------------------------------------------------------------------------
	Sub Event_PoTime(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Plane of Time"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Plane of Time"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_BrellsRest
| --------------------------------------------------------------------------------------------
	Sub Event_BrellsRest(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Brell's Rest"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Brell's Rest"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Grounds
| --------------------------------------------------------------------------------------------
	Sub Event_Grounds(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: the Grounds"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate the Grounds"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_BeastsDomain
| --------------------------------------------------------------------------------------------
	Sub Event_BeastsDomain(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Beasts' Domain"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_PillarsOfAlra
| --------------------------------------------------------------------------------------------
	Sub Event_PillarsOfAlra(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Pillars of Alra"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Pillars of Alra"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_ShardsLanding
| --------------------------------------------------------------------------------------------
	Sub Event_ShardsLanding(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Shard's Landing"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_WestKarana
| --------------------------------------------------------------------------------------------
	Sub Event_WestKarana(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: West Karana"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate West"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Lceanium
| --------------------------------------------------------------------------------------------
	Sub Event_Lceanium(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Lceanium"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Lceanium"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_TempestTemple
| --------------------------------------------------------------------------------------------
	Sub Event_TempestTemple(Line,Sender)
	/if (${Me.Class.Name.Equal[Druid]}) /call Port "${Sender}" "Zephyr: Tempest Temple"
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Tempest Temple"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_GFay
| --------------------------------------------------------------------------------------------
	Sub Event_GFay(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Fay"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Nek
| --------------------------------------------------------------------------------------------
	Sub Event_Nek(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Nek"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Cazic
| --------------------------------------------------------------------------------------------
	Sub Event_Cazic(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Cazic"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Bind
| --------------------------------------------------------------------------------------------
	Sub Event_Bind(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Sunderock
| --------------------------------------------------------------------------------------------
	Sub Event_Sunderock(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Sunderock Springs"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_PrimaryAnchor
| --------------------------------------------------------------------------------------------
	Sub Event_PrimaryAnchor(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Teleport Primary Anchor"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_SecondaryAnchor
| --------------------------------------------------------------------------------------------
	Sub Event_SecondaryAnchor(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Teleport Secondary Anchor"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Icefall
| --------------------------------------------------------------------------------------------
	Sub Event_Icefall(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Icefall Glacier"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Katta
| --------------------------------------------------------------------------------------------
	Sub Event_Katta(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Katta Castrum"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Dragonscale
| --------------------------------------------------------------------------------------------
	Sub Event_Dragonscale(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Dragonscale Hills"
	/return


| --------------------------------------------------------------------------------------------
| SUB: Event_Sarith
| --------------------------------------------------------------------------------------------
	Sub Event_Sarith(Line,Sender)
	/if (${Me.Class.Name.Equal[Wizard]}) /call Port "${Sender}" "Translocate Sarith"
	/return
|------------------------------------------------------------|
|          End Port Events
|------------------------------------------------------------|
|------------------------------------------------------------|
|          End Events
|------------------------------------------------------------|
|    [+++  Formatted by MQ2fusing tabs for indents +++]
